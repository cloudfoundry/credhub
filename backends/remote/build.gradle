buildscript {
    ext {
        grpcVersion = '1.45.1'
        nettyVersion = '4.1.75.Final'
    }
    repositories {
        mavenCentral()
        maven { url("https://repo.spring.io/plugins-release") }
        maven { url("https://plugins.gradle.org/m2/") }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        classpath("com.google.protobuf:protobuf-gradle-plugin:0.8.18")
    }
}

apply plugin: "java"
apply plugin: "idea"
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.google.protobuf"

apply from: "${rootDir.toPath()}/kotlin.gradle"
apply from: "${rootDir.toPath()}/ktlint.gradle"
apply from: "${rootDir.toPath()}/checkstyle-config.gradle"
apply from: "${rootDir.toPath()}/pmd-config.gradle"
apply from: "${rootDir.toPath()}/spotbugs.gradle"

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation project(":components:constants")
    implementation project(":components:errors")
    implementation project(":components:string-utilities")
    implementation project(":components:time-support")

    testImplementation project(path: ":components:test-support", configuration: "testOutput")

    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:${springSecurityOauth2AutoconfigureVersion}")
    testImplementation("org.springframework.boot:spring-boot-starter-test")

    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")


    // Other
    implementation("org.apache.commons:commons-lang3:${apacheCommonsLang3Version}")
    implementation("commons-codec:commons-codec:${commonsCodecVersion}")

    //gRPC
    implementation "com.google.api.grpc:proto-google-common-protos:2.8.3"
    implementation "io.grpc:grpc-services:${grpcVersion}"

    //gRPC - Netty
    implementation "io.grpc:grpc-netty:${grpcVersion}"

    //Netty
    implementation "io.netty:netty-transport-native-unix-common:${nettyVersion}"
    implementation "io.netty:netty-all:${nettyVersion}"
    implementation "io.netty:netty-codec-http2:${nettyVersion}"

    //tcnative
    implementation "io.netty:netty-tcnative-boringssl-static:2.0.51.Final"
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    }
}

sourceSets {
    main {
        proto {
            srcDir "$project/src/main/proto"
        }
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
    test {
        resources {
            srcDirs += [
                    project(":applications:credhub-api").sourceSets.main.resources,
                    project(":applications:credhub-api").sourceSets.test.resources
            ]
        }
    }
}

assemble.mustRunAfter("clean")
protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.20.0"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

test {
    testLogging {
        events "passed", "failed", "skipped"
        exceptionFormat "full"
    }

    systemProperties = System.properties
    systemProperties["spring.profiles.active"] = System.getProperty("spring.profiles.active", "unit-test-h2")
    systemProperties["java.security.egd"] = System.getProperty("java.security.egd", "file:/dev/urandom")
    outputs.upToDateWhen { false }
}
