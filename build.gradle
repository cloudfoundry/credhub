import org.cloudfoundry.credhub.gradlebuild.DependenciesGraphPlugin

buildscript {
    ext {
        apacheCommonsLang3Version = '3.12.0'
        apacheCommonsIoVersion = '2.11.0'
        apacheHttpClientVersion = '4.5.13'
        asciiDoctorPluginVersion = '1.6.1'
        bcpkixFipsVersion = '1.0.5'
        bcFipsVersion = '1.0.2.3'
        commonsCodecVersion = '1.15' // remove this after deleting (now deprecated) spring-security-oauth2
        flywayVersion = '7.15.0'
        guavaVersion = '31.1-jre'
        h2Version = '1.4.200'
        jsonPathVersion = '2.7.0'
        kotlinVersion = '1.6.21'
        ktlintVersion = '0.43.2'
        passayVersion = '1.6.2'
        postgresqlJdbcVersion = '42.5.0'
        spotBugsToolVersion = '4.6.0'
        springRestDocsVersion = '2.0.6.RELEASE'
        springBootVersion = '2.7.4'
        springSecurityOauth2Version = '2.5.2.RELEASE'
        springSecurityOauth2AutoconfigureVersion = '2.6.8'
        junitVersion = '4.13.2'
        mariadbJdbcVersion = '2.7.6' // Bumping to v3 breaks some pipeline jobs, so pinning to v2 for now. v2 (current version) is stable and will be supported until about September 2025 (https://mariadb.com/kb/en/about-mariadb-connector-j/).
    }
    repositories {
        mavenCentral()
        jcenter()
        maven { url("https://repo.spring.io/plugins-release") }
        maven { url("https://plugins.gradle.org/m2/") }
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.owasp:dependency-check-gradle:7.2.1")
        classpath("org.bouncycastle:bc-fips:${bcFipsVersion}")
        classpath("org.bouncycastle:bcpkix-fips:${bcpkixFipsVersion}")
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.43.0'
    id 'com.github.spotbugs'
}

apply plugin: DependenciesGraphPlugin
apply plugin: "org.owasp.dependencycheck"

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

subprojects {
    plugins.withType(JavaPlugin) {
        dependencies {
            testImplementation("org.mockito:mockito-inline")
        }
    }
}
