import org.cloudfoundry.credhub.gradlebuild.DependenciesGraphPlugin

buildscript {
    ext {
        apacheCommonsLang3Version = '3.12.0'
        apacheCommonsIoVersion = '1.3.2'
        apacheHttpClientVersion = '4.5.13'
        asciiDoctorPluginVersion = '1.6.1'
        bcpkixFipsVersion = '1.0.5'
        bcFipsVersion = '1.0.1'
        commonsCodecVersion = '1.15' // remove this after deleting (now deprecated) spring-security-oauth2
        flywayVersion = '7.15.0'
        guavaVersion = '31.1-jre'
        h2Version = '1.4.199'
        jsonPathVersion = '2.7.0'
        kotlinVersion = '1.5.32'
        ktlintVersion = '0.42.1'
        mariadbJdbcVersion = '2.7.4' // When using a MariaDB with a driver of version 2.4.0 or greater, FlyWay 5 does not know how to handle the driver reporting itself as "MariaDB" and will throw an exception causing CredHub to be unable to start. Do not upgrade until this issue is resolved. See #174776586.
        passayVersion = '1.6.1'
        postgresqlJdbcVersion = '42.3.3'
        spotBugsToolVersion = '4.6.0'
        springRestDocsVersion = '2.0.6.RELEASE'
        springBootVersion = '2.5.10'
        springSecurityOauth2Version = '2.5.1.RELEASE'
        springSecurityOauth2AutoconfigureVersion = '2.6.3'
        junitVersion = '4.13.2'
        log4jVersion = '2.17.2' // this pinning can be removed when we bump to a spring boot starter version that has 2.17.1+ (due to CVE https://github.com/advisories/GHSA-jfh8-c2jp-5v3q in log4j <= 2.15.0)
    }
    repositories {
        mavenCentral()
        jcenter()
        maven { url("https://repo.spring.io/plugins-release") }
        maven { url("https://plugins.gradle.org/m2/") }
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.owasp:dependency-check-gradle:7.0.1")
        classpath("org.bouncycastle:bc-fips:${bcFipsVersion}")
        classpath("org.bouncycastle:bcpkix-fips:${bcpkixFipsVersion}")
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.42.0'
    id 'com.github.spotbugs'
}

apply plugin: DependenciesGraphPlugin
apply plugin: "org.owasp.dependencycheck"

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

subprojects {
    plugins.withType(JavaPlugin) {
        dependencies {
            testImplementation("org.mockito:mockito-inline:4.4.0")
        }
    }
}
